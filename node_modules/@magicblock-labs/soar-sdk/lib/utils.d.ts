import { PublicKey } from "@solana/web3.js";
import type BN from "bn.js";
export declare const enum Seeds {
    GAME = "game",
    LEADER = "leaderboard",
    ACHIEVEMENT = "achievement",
    PLAYER = "player",
    PLAYER_SCORES = "player-scores-list",
    PLAYER_ACHIEVEMENT = "player-achievement",
    LEADER_TOP_ENTRIES = "top-scores",
    NFT_CLAIM = "nft-claim"
}
export declare class Utils {
    readonly programId: PublicKey;
    constructor(programId: PublicKey);
    deriveLeaderBoardAddress(id: BN, game: PublicKey): [PublicKey, number];
    deriveLeaderTopEntriesAddress(leaderboard: PublicKey): [PublicKey, number];
    deriveAchievementAddress(id: BN, game: PublicKey): [PublicKey, number];
    derivePlayerAddress(user: PublicKey): [PublicKey, number];
    derivePlayerScoresListAddress(user: PublicKey, leaderboard: PublicKey): [PublicKey, number];
    derivePlayerAchievementAddress(user: PublicKey, achievement: PublicKey): [PublicKey, number];
    deriveNftClaimAddress(reward: PublicKey, mint: PublicKey): [PublicKey, number];
    deriveMetadataAddress: (mint: PublicKey) => [PublicKey, number];
    deriveEditionAddress: (mint: PublicKey) => [PublicKey, number];
    deriveAssociatedTokenAddress: (mint: PublicKey, user: PublicKey) => PublicKey;
    zip: <T, U>(a: T[], b: U[], defaultB: U) => Array<[T, U]>;
}
//# sourceMappingURL=utils.d.ts.map