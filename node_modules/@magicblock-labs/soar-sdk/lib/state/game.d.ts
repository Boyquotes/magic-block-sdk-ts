import { type PublicKey } from "@solana/web3.js";
import type BN from "bn.js";
import { type IdlAccounts } from "@coral-xyz/anchor";
import { type Soar } from "../idl/soar";
import { type SoarProgram } from "../soar.program";
import { GameClient } from "../soar.game";
export declare class GameAccount {
    readonly address: PublicKey;
    readonly meta: GameAttributes;
    readonly achievementCount: BN;
    readonly leaderboardCount: BN;
    readonly auth: PublicKey[];
    protected constructor(_address: PublicKey, account: IdlAccounts<Soar>["game"]);
    static fromIdlAccount(account: IdlAccounts<Soar>["game"], address: PublicKey): GameAccount;
    client(soar: SoarProgram): Promise<GameClient>;
    pretty(): {
        address: string;
        meta: {
            title: string;
            description: string;
            genre: Genre;
            gameType: GameType;
            nftMeta: string;
        };
        achievementCount: string;
        leaderboardCount: string;
        auth: string[];
    };
}
export interface GameAttributes {
    title: string;
    description: string;
    genre: Genre;
    gameType: GameType;
    nftMeta: PublicKey;
}
export declare const enum GameType {
    Mobile = 0,
    Desktop = 1,
    Web = 2,
    Unspecified = 255
}
export declare const enum Genre {
    RPG = 0,
    MMO = 1,
    Action = 2,
    Adventure = 3,
    Puzzle = 4,
    Casual = 5,
    Unspecified = 255
}
//# sourceMappingURL=game.d.ts.map